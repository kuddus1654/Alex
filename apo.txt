Q1.Create form a login page if the username and password is correct then it’s say message hello else a message logging FailedAns.//login.html<!DOCTYPE html><html><head><meta charset="UTF-8"><title>Insert title here</title></head><body><form action="LoginServlet" Method="doGet">enter user id <input type="text" name="txtid"> <br>enter pass <input type="password" name="txtpass"><br><input type="reset" value= "reset"><input type="Submit" value="click to login"></form></body></html>//LoginServlet.javapackage LoginServlet;import java.io.*;import jakarta.servlet.ServletException;import jakarta.servlet.annotation.WebServlet;import jakarta.servlet.http.*;@WebServlet("/LoginServlet")public class LoginServlet extends HttpServlet {    protected void doGet(HttpServletRequest request, HttpServletResponse response)        throws ServletException, IOException {        response.setContentType("text/html;charset=UTF-8");        PrintWriter out = response.getWriter();        String uname = request.getParameter("txtid");        String upass = request.getParameter("txtpass");        out.println("<html><head><title>LoginServlet</title></head>");        if ("admin".equals(uname) && "12345".equals(upass)) {            out.println("<body bgcolor='blue'><h1>Welcome !!! " + uname + "</h1>");        } else {            out.println("<body bgcolor='red'><h1>Login Fail !!!</h1>");        }        out.println("</body></html>");    }}Q2. Developer simple JSP application to display visual obtained from use of Implicate object value typeAns.<!-- Jsp_application.jsp --><%@ page language="java" contentType="text/html; charset=UTF-8" %><html><head><title>Jakarta JSP Implicit Objects</title></head><body>    <h2>Implicit Object Values</h2>    <p><strong>Request Method:</strong> <%= request.getMethod() %></p>    <p><strong>Request URI:</strong> <%= request.getRequestURI() %></p>    <p><strong>Client IP Address:</strong> <%= request.getRemoteAddr() %></p>    <p><strong>Session ID:</strong> <%= session.getId() %></p>    <p><strong>Server Name:</strong> <%= request.getServerName() %></p>    <p><strong>Application Context Path:</strong> <%= application.getContextPath() %></p>    <p><strong>Current Date:</strong> <%= new java.util.Date() %></p></body></html>Q4. Develop a jsp application to allow the user to modify the region detail after the valid authenticationAns.<!-- login.jsp --><form action="Login" method="post">  <input name="u" placeholder="User"><br>  <input name="p" placeholder="Pass"><br>  <input type="submit" value="Login"></form><!-- region.jsp --><%@ page import="jakarta.servlet.http.*" %><%  if (session.getAttribute("user") == null) {    response.sendRedirect("login.jsp");    return;  }%><form action="Update" method="post">  <input name="id" placeholder="New Name"><br>  <input name="name" placeholder=" New Password"><br>  <input type="submit" value="Update"></form>/*Login.java*/package Login;import jakarta.servlet.annotation.WebServlet;import jakarta.servlet.http.*;import java.io.*;@WebServlet("/Login")public class Login extends HttpServlet {  protected void doPost(HttpServletRequest r, HttpServletResponse s) throws IOException {    if ("admin".equals(r.getParameter("u")) && "123".equals(r.getParameter("p"))) {      r.getSession().setAttribute("user", "admin");      s.sendRedirect("region.jsp");    } else s.getWriter().print("Login Failed");  }}/*Update.java*/package Update;import jakarta.servlet.annotation.WebServlet;import jakarta.servlet.http.*;import java.io.*;@WebServlet("/Update")public class Update extends HttpServlet {  protected void doPost(HttpServletRequest r, HttpServletResponse s) throws IOException {    s.getWriter().printf("Updated: %s - %s", r.getParameter("id"), r.getParameter("name"));  }}Q5. Write a Java program using servlet to authenticate User username and passwordAns.<!-- login.html --><form action="Auth" method="post">  <input name="username" placeholder="User"><br>  <input name="password" placeholder="Pass"><br>  <input type="submit" value="Login"></form>/*Auth.java*/package Auth;import jakarta.servlet.annotation.WebServlet;import jakarta.servlet.http.*;import java.io.*;@WebServlet("/Auth")public class Auth extends HttpServlet {  protected void doPost(HttpServletRequest r, HttpServletResponse s) throws IOException {    String u = r.getParameter("username"), p = r.getParameter("password");    s.getWriter().print("admin".equals(u) && "123".equals(p) ? "Login Successful" : "Login Failed");  }}Q8. Develop servlet application for accepting user registration detail and displaying it on another page ( at least 6 values)Ans:/*rejisterservlet*/package rejisterservlet;import jakarta.servlet.*; import jakarta.servlet.http.*; import jakarta.servlet.annotation.*;@WebServlet("/register")public class rejisterservlet extends HttpServlet {  protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, java.io.IOException {    String[] fields = {      req.getParameter("name"),      req.getParameter("email"),      req.getParameter("username"),      req.getParameter("password"),      req.getParameter("gender"),      req.getParameter("city")    };    req.setAttribute("data", fields);    req.getRequestDispatcher("display.jsp").forward(req, res);  }}<!-- rejister jsp --><form method="post" action="register">  Name: <input name="name"/><br/>  Email: <input name="email"/><br/>  Username: <input name="username"/><br/>  Password: <input type="password" name="password"/><br/>  Gender: <select name="gender"><option>Male</option><option>Female</option></select><br/>  City: <input name="city"/><br/>  <button>Register</button></form><!-- display jsp --><%  String[] d = (String[]) request.getAttribute("data");  String[] labels = {"Name", "Email", "Username", "Password", "Gender", "City"};%><h2>Registration Details</h2><% for (int i = 0; i < d.length; i++) { %>  <p><b><%= labels[i] %>:</b> <%= d[i] %></p><% } %>Q9. Create a servlet that users cookie to store to the number of times user has visited servlet Ans:usercookies.javapackage usercookies;import jakarta.servlet.*;import jakarta.servlet.http.*;import jakarta.servlet.annotation.*;@WebServlet("/visit")public class usercookies extends HttpServlet {  protected void doGet(HttpServletRequest req, HttpServletResponse res) throws java.io.IOException {    int count = 1;    for (Cookie c : req.getCookies() != null ? req.getCookies() : new Cookie[0])      if ("visitCount".equals(c.getName())) count = Integer.parseInt(c.getValue()) + 1;    res.addCookie(new Cookie("visitCount", String.valueOf(count)));    res.setContentType("text/html");    res.getWriter().println("<h2>You have visited this servlet " + count + " times.</h2>");  }}Q10. Develop A JSP application to allow the user to modify to register details after valid authentication.Ans:/*loginservlet.java*/package Loginservlet;import jakarta.servlet.*; import jakarta.servlet.http.*; import jakarta.servlet.annotation.*;@WebServlet("/login")public class Loginservlet extends HttpServlet {  protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, java.io.IOException {    String u = req.getParameter("username");    String p = req.getParameter("password");    if ("admin".equals(u) && "123".equals(p)) {      HttpSession s = req.getSession();      s.setAttribute("username", u);      s.setAttribute("email", "admin@example.com");      s.setAttribute("city", "Mumbai");      res.sendRedirect("update.jsp");    } else {      res.getWriter().println("<p>Invalid login</p><a href='login.jsp'>Try Again</a>");    }  }}/*updateservlet.java*/package Updateservlet;import jakarta.servlet.*; import jakarta.servlet.http.*; import jakarta.servlet.annotation.*;@WebServlet("/update")public class Updateservlet extends HttpServlet {  protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, java.io.IOException {    HttpSession s = req.getSession();    s.setAttribute("email", req.getParameter("email"));    s.setAttribute("city", req.getParameter("city"));    res.sendRedirect("success.jsp");  }}<!—login.jsp --><form method="post" action="login">  Username: <input name="username"/><br/>  Password: <input type="password" name="password"/><br/>  <button>Login</button></form><!—update.jsp --><%  String u = (String) session.getAttribute("username");  if (u == null) { response.sendRedirect("login.jsp"); return; }%><h2>Edit Details for <%= u %></h2><form method="post" action="update">  Email: <input name="email" value="<%= session.getAttribute("email") %>"/><br/>  City: <input name="city" value="<%= session.getAttribute("city") %>"/><br/>  <button>Update</button></form><!—success.jsp --><h2>Details Updated Successfully!</h2><p>Email: <%= session.getAttribute("email") %></p><p>City: <%= session.getAttribute("city") %></p><a href="update.jsp">Edit Again</a>Q11. Create HTML page with fields Eno, name, Age, designation, salary, Now on submit this data to a JSP page which will update the employee table of database which machine. EnoAns.EmployeeBD-- Step 1: Create the databaseCREATE DATABASE EmployeeDB;-- Step 2: Use the databaseUSE EmployeeDB;-- Step 3: Create the employee tableCREATE TABLE employee (  eno VARCHAR(10) PRIMARY KEY,  name VARCHAR(100),  age INT,  designation VARCHAR(100),  salary DOUBLE);USE EmployeeDB;SELECT * FROM employee;<!-- employeeForm.html --><form action="updateEmployee.jsp" method="post">  Eno: <input name="eno"><br>  Name: <input name="name"><br>  Age: <input name="age"><br>  Designation: <input name="designation"><br>  Salary: <input name="salary"><br>  <input type="submit" value="Update"></form><!-- updateEmployee.jsp --><%@ page import="java.sql.*" %><%String eno = request.getParameter("eno");String name = request.getParameter("name");String age = request.getParameter("age");String desg = request.getParameter("desg");String salary = request.getParameter("salary");try {    Class.forName("com.mysql.cj.jdbc.Driver"); // MySQL JDBC Driver    Connection con = DriverManager.getConnection(        "jdbc:mysql://localhost:3306/EmployeeDB", "root", "root123"    );    String sql = "UPDATE employee SET name=?, age=?, designation=?, salary=? WHERE eno=?";    PreparedStatement pst = con.prepareStatement(sql);    pst.setString(1, name);    pst.setInt(2, Integer.parseInt(age));    pst.setString(3, desg);    pst.setDouble(4, Double.parseDouble(salary));    pst.setString(5, eno); // Use setString if eno is VARCHAR in DB    int result = pst.executeUpdate();    if(result > 0) {        out.println("<h3>Employee Updated Successfully!</h3>");    } else {        out.println("<h3>Employee Not Found!</h3>");    }    pst.close();    con.close();} catch(Exception e) {    out.println("<h3>Error: " + e.getMessage() + "</h3>");}%>Q12. Develop servlet application to demonstrate calculatorAns.// login.javapackage calculator;import jakarta.servlet.ServletException;import jakarta.servlet.annotation.WebServlet;import jakarta.servlet.http.HttpServlet;import jakarta.servlet.http.HttpServletRequest;import jakarta.servlet.http.HttpServletResponse;import java.io.IOException;import java.io.PrintWriter;@WebServlet("/login")public class login extends HttpServlet {    private static final long serialVersionUID = 1L;    public login() {        // TODO Auto-generated constructor stub    }    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        // TODO Auto-generated method stub        response.getWriter().append("Served at: ").append(request.getContextPath());    }    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        double num1 = Double.parseDouble(request.getParameter("num1"));        double num2 = Double.parseDouble(request.getParameter("num2"));        String op = request.getParameter("operation");        double result = 0;        boolean valid = true;        switch (op) {            case "add": result = num1 + num2; break;            case "sub": result = num1 - num2; break;            case "mul": result = num1 * num2; break;            case "div":                if (num2 != 0) result = num1 / num2;                else valid = false;                break;            default: valid = false;        }        System.out.print(num1+num2);        System.out.println(op);        response.setContentType("text/html");        PrintWriter out = response.getWriter();        out.println("<html><body>");        if (valid) {            out.printf("<h2>Result: %.2f %s %.2f = %.2f</h2>", num1, op, num2, result);        } else {            out.println("<h2>Error: Invalid operation or divide by zero.</h2>");        }       out.println("<a href='index.html'>Back</a>");        out.println("</body></html>");    }}//calc.html<!DOCTYPE html><html><head><meta charset="UTF-8"><title>Insert title here</title></head><body><form action="login" method="post">num1: <input type="text" name="num1" value="num1">num2 <input type="text" name="num2" value="num2"><select name="operation"><option name="add">add</option><option name="sub">sub</option><option name="mul">mul</option><option name="div">div</option></select><input type=submit></form></body></html>